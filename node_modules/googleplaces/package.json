{
  "name": "googleplaces",
  "version": "0.4.0",
  "description": "Node.js library for the Google Places API",
  "keywords": [
    "google",
    "places",
    "api",
    "google places",
    "google places api"
  ],
  "homepage": "https://github.com/Srirangan/googleplaces.js",
  "bugs": {
    "url": "https://github.com/Srirangan/googleplaces.js/issues",
    "email": "srirangan@gmail.com"
  },
  "author": {
    "name": "Srirangan",
    "email": "srirangan@gmail.com",
    "url": "http://srirangan.net"
  },
  "contributors": [
    {
      "name": "metafedora@gmail.com",
      "url": "http://andrew.dalgleish.info"
    }
  ],
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/Srirangan/googleplaces.js.git"
  },
  "scripts": {
    "test": "sh ./test.sh"
  },
  "readme": "# googleplaces.js\n\nA node.js library for the Google Places API\n\n### ugh?\n\ngoogleplaces.js makes it easy to talk to the Google Places API from your server side Node.js application\n\n### can i use in the browser?\n\nGoogle already maintains a dedicated client side JavaScript [library](https://developers.google.com/maps/documentation/javascript/places)\n\n### what's supported in 0.3.0?\n\n- [Places search](https://developers.google.com/places/documentation/#PlaceSearchRequests)\n- [Place details request](https://developers.google.com/places/documentation/#PlaceDetails)\n- [Text search](https://developers.google.com/places/documentation/#TextSearchRequests)\n- [Events](https://developers.google.com/places/documentation/events)\n\n### what's coming up next?\n\n- [Place Actions](https://developers.google.com/places/documentation/actions)\n- [Place Photos](https://developers.google.com/places/documentation/photos)\n- [Check-ins](https://developers.google.com/places/documentation/#PlaceCheckins)\n- [Query Autocomplete](https://developers.google.com/places/documentation/query)\n\n### can i contribute?\n\nYes, fork, hack and send me a PR\n\n# get started\n\n### 1. google\n\n- Enable Google Places API on [Google API Console](https://code.google.com/apis/console)\n- Create a server side API on [Google API Console](https://code.google.com/apis/console)\n- Enable billing for more requests per day\n\n### 2. npm\n\n    $ npm install googleplaces\n\n### 3. configure\n\n    # set environment variables\n    export GOOGLE_PLACES_API_KEY = \"your key here\"\n    export GOOGLE_PLACES_OUTPUT_FORMAT = \"json\"\n\n# examples\n\n### places search\n\n    var GooglePlaces = require(\"googleplaces\");\n    var googlePlaces = new GooglePlaces(process.env.GOOGLE_PLACES_API_KEY, process.env.GOOGLE_PLACES_OUTPUT_FORMAT);\n    var parameters;\n\n    /**\n     * Place search - https://developers.google.com/places/documentation/#PlaceSearchRequests\n     */\n    parameters = {\n      location:[-33.8670522, 151.1957362],\n      types:\"doctor\"\n    };\n    googlePlaces.placeSearch(parameters, function (error, response) {\n      if (error) throw error;\n      console.log(response.results);\n    });\n\n### places details\n\n    var GooglePlaces = require(\"googleplaces\");\n    var googlePlaces = new GooglePlaces(process.env.GOOGLE_PLACES_API_KEY, process.env.GOOGLE_PLACES_OUTPUT_FORMAT);\n    var parameters;\n\n    /**\n     * Place details requests - https://developers.google.com/places/documentation/#PlaceDetails\n     */\n    parameters = {\n      location:[-33.8670522, 151.1957362],\n      types:\"doctor\"\n    };\n    googlePlaces.placeSearch(parameters, function (error, response) {\n      if (error) throw error;\n      googlePlaces.placeDetailsRequest({reference:response.results[0].reference}, function (error, response) {\n        if (error) throw error;\n        console.log(response.result);\n      });\n    });\n\n### text search\n\n    var GooglePlaces = require(\"googleplaces\");\n    var googlePlaces = new GooglePlaces(process.env.GOOGLE_PLACES_API_KEY, process.env.GOOGLE_PLACES_OUTPUT_FORMAT);\n    var parameters;\n\n    /**\n     * Text search - https://developers.google.com/places/documentation/#TextSearchRequests\n     */\n    parameters = {\n      query:\"restaurants in dublin\"\n    };\n    googlePlaces.textSearch(parameters, function (error, response) {\n      if (error) throw error;\n      console.log(response.results);\n    });\n",
  "readmeFilename": "readme.md",
  "_id": "googleplaces@0.4.0",
  "dist": {
    "shasum": "04823567b9d21e4079834f22c53a19332ff29456"
  },
  "_from": "googleplaces@",
  "_resolved": "https://registry.npmjs.org/googleplaces/-/googleplaces-0.4.0.tgz"
}
