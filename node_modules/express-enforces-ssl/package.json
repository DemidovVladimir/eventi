{
  "name": "express-enforces-ssl",
  "version": "1.1.0",
  "description": "Enforces SSL for node.js express projects",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/aredo/express-enforces-ssl"
  },
  "keywords": [
    "express",
    "expressjs",
    "ssl",
    "enforces",
    "enforces-ssl",
    "http",
    "https",
    "redirect"
  ],
  "author": {
    "name": "Hengki Sihombing",
    "email": "hengki.sihombing@gmail.com",
    "url": "http://twitter.com/hengkiardo"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/aredo/express-enforces-ssl/issues"
  },
  "homepage": "https://github.com/aredo/express-enforces-ssl",
  "readme": "express-enforces-ssl\n==============\n\nThis simple module enforces HTTPS connections on any incoming requests. In case of a non-encrypted HTTP request, express-enforces-ssl automatically redirects to an HTTPS address using a 301 permanent redirect.\n\nexpress-enforces-ssl also works behind reverse proxies (load balancers) as they are for example used by Heroku and nodejitsu. In such cases, however, the `trustProxy` parameter has to be set (see below)\n\n### Usage\n\nFirst, install the module:\n\n```\n$ npm install express-enforces-ssl --save\n```\n\nAfterwards, require the module and *use* the `HTTPS()` method:\n```javascript\nvar express = require('express');\nvar http = require('http');\nvar express_enforces_ssl = require('express-enforces-ssl');\n\nvar app = express();\n\napp.enable('trust proxy');\n\napp.use(express_enforces_ssl());\n\n/*\n    Routes Here\n*/\n\nhttp.createServer(app).listen(app.get('port'), function() {\n\tconsole.log('Express server listening on port ' + app.get('port'));\n});\n\n```\n\nLICENCE\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "express-enforces-ssl@1.1.0",
  "_from": "express-enforces-ssl@^1.1.0"
}
